[{"content":"一開始 買這個網域已經有了四年的時間，起初想要簡單寫個網誌，偶爾需要火力展示什麼的想著想著覺得應該方便許多，自己有個網域感覺多拉風阿。\n興致沖沖的開始 在GCP上租了主機，心想阿這就是網誌的開始，開始找資料查詢哪一個框架好，哪一個編輯器好寫。\n最後選定了 HEXO 作為框架\n網誌內容為了測試就打了建設中，像是要有甚麼偉大的建設一樣，圍上了施工布條。\n荒廢期 然後呢？\n然後？就沒有然後了。 架設主機後就像是蠟燭燃燒殆盡一樣，腦袋每次動手都在想為何要寫？\n編輯文章並沒有編輯器好寫 Server每次都要push文章重新生成，並沒有建構CI/CD 覺得自己寫了沒人看，參考文章也是貼來貼去 寫了被人批評被人笑怎麼辦\n內心設想了無數的劇本。心裡想改天好了，何必這樣摧殘自己呢？上班都夠累了，就這樣過了一年。\n某天機器通知被**DDoS 攻擊，從**GCP轉至linode，又是搬阿搬拆阿拆，甚至還把建置流程寫了DockerFile方便又要搬移的作法。\n就是不動鍵盤生出一篇文章。\n雖然，從2020開始使用Notion寫了許多筆記，但始終沒有重新整理輸出到部落格上。\n火種？ 就這樣時間過了四年來到2022年，某天在FaceBook看到91寫到一篇 我為什麼鼓勵工程師寫 blog 一文 引用了 How To Achieve Ultimate Blog Success In One Easy Step 翻譯過來一段話：\n挑個你自認為可以的時間行程安排，什麼時候開始寫 blog，預計多久寫一篇文，開始動工，並堅持下去。在你這麼做之前，任何建議對你來說都是不重要的。你文章是否寫得很糟糕不重要，是否沒有任何人會看你的 blog 不重要，是不是沒啥有趣的東西可以紀錄也不重要。重要的是，只要你能透過寫文來表現出寫作的意願，而且渴望持續地寫作，檢視、思考與改善自己的寫作，你終究會成功的。\n看完這段話，我的確是想了太多。\nNotion寫上去跟Blog不一樣? 當開始撰寫時，就想著應該只要把Notion的筆記給倒出來就好？\n就好了吧？\n倒文章的當下發現了一堆即使我寫了也看不懂的文章反而占了一部分，步驟上也非常凌亂不堪。\n事情看來沒有這麼簡單。於是在整理新的主題得時候，想著說不定會有人看了這邊文章操作，反而讓我更專注在有可能漏掉的地方，或是更注重步驟上的紀錄。\n寫在這裡就是要救未來的自己 可能哪一天我要看或是哪一天有人要看？ 雖然寫得很醜很爛又貼來貼去，但寫下去就對了吧 大概是這樣的想法開始寫Blog的開始，就像這個Blog名稱一樣**隨堂測驗紙**。\n因為想要紀錄步驟，找一個好寫且便宜的地方放在那裏讓我好尋找，為了自己而寫。\n參考 感謝巨人們的肩膀 沒有你們就沒有這篇文章 好文推薦——《我為什麼鼓勵工程師寫blog》 - Pin 起來！ (pinchlime.com)\n我為什麼鼓勵工程師寫 blog - 最好的 TDD 學習資源\n","date":"2022-08-26T01:00:00+02:00","image":"https://www.beemoalex.net/p/%E5%AF%AB%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84%E9%96%8B%E5%A7%8B/cover_hu0e77e22efc63685eab0743bdf7dea8aa_68613_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.beemoalex.net/p/%E5%AF%AB%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84%E9%96%8B%E5%A7%8B/","title":"寫部落格的開始"},{"content":"前言 以前還在前公司Infra職時，習慣用Oh My Zsh 美化自己的 terminal。\n在這間公司時又懷念起 Linux體系的 Oh My Zsh terminal那樣的介面，於是又動手把它裝起來，git提示跟字體真的讓自己下語法會好蠻多的。\n這陣子又有新環境要安裝，卻沒找到之前的步驟，這次還是乖乖地寫下來。\n環境建置 1.使用PowerShell，先安裝Windows Terminal 新版本 (可以去Store安裝也可，Win10都用winget了下個指令也行 )\n1 winget install Microsoft.WindowsTerminal -e 2.升級PowerShell 7\n1 winget install Microsoft.PowerShell -e 改一下預設開啟Windows Terminal 時為 PowerShell 7，改完後重開一下切成PowerShell 7\n3.安裝 oh-my-posh\n1 winget install JanDeDobbeleer.OhMyPosh 修改一下PowerShell使用者配置檔，打開使用者配置檔案\n1 notepad $PROFILE 如果你是打不開的代表沒文件，請創建使用者配置檔\n1 New-Item -Path $PROFILE -Type File -Force 打開配置檔的記事本後，增加以下內容\n1 oh-my-posh init pwsh | Invoke-Expression 存檔後回到Windows Terminal 讓他重新載入內容\n1 . $PROFILE oh-my-posh輸入\n1 oh-my-posh font install 跑出字體選單，選一個喜歡的就好，\nNerd Fonts - Iconic font aggregator, glyphs/icons collection, \u0026amp; fonts patcher\n個人還是建議選Mono字體，等寬換行上才不會有多人協作換行問題\n下載完成後請按下 CTRL + SHIFT + ,\n跳出編輯視窗尋找 profiles \u0026gt; list \u0026gt; name 值為 PowerShell 7 的區塊，增加區塊\nface 值就是你剛剛下載字體的區塊，像我就選粗體的AurulentSansMono\n1 2 3 4 \u0026#34;font\u0026#34;: { \u0026#34;face\u0026#34;: \u0026#34;AurulentSansMono NF\u0026#34; }, 改好了就像這樣\n為什麼不改 defaults ? 改了之後 VS 底下的 終端機視窗符號無法顯示，建議改個指定來源就好\n重新啟動 Windows Terminal\n完工\n額外補充 修改主題 如果真的嫌主題醜或是不實用可以上 Themes | Oh My Posh 看看喜歡的\n打開配置文件 notepad $PROFILE 第一行更新\n修改以下 \u0026quot;$env:POSH_THEMES_PATH{主題名稱}.omp.json\u0026quot;\n範例:\n1 oh-my-posh init pwsh --config \u0026#34;$env:POSH_THEMES_PATH\\gruvbox.omp.json\u0026#34; | Invoke-Expression posh-git git補完插件 既然都裝了這些常常忘記git怎麼下，自然也是裝起來，使用Install-Module 功能下載安裝\n1 Install-Module posh-git -Scope CurrentUser -Force 完成後輸入依樣輸入 notepad $PROFILE 打開配置檔案，加入最後一行存檔\n1 Import-Module posh-git 重新載入使用者配置檔，輸入. $PROFILE 就能自動補上git指令了\n參考 感謝巨人們的肩膀 沒有你們就沒有這篇文章 如何打造一個華麗又實用的 PowerShell 命令輸入環境 | The Will Will Web (miniasp.com)\nmicrosoft/terminal: The new Windows Terminal and the original Windows console host, all in the same place! (github.com)\n安裝新版 Oh My Posh 與插件來美化 PowerShell | 成功他媽．阿瑋 (kwchang0831.dev)\nChange your prompt | Oh My Posh\ndahlbyk/posh-git： A PowerShell environment for Git (github.com)\n","date":"2022-08-25T01:00:00+02:00","image":"https://www.beemoalex.net/p/%E6%89%93%E9%80%A0%E6%BC%82%E4%BA%AE-powershell-7-%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83_%E4%BD%BF%E7%94%A8oh-my-posh/cover_hu70296df033507ea6da0c35602e133ae1_62152_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.beemoalex.net/p/%E6%89%93%E9%80%A0%E6%BC%82%E4%BA%AE-powershell-7-%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83_%E4%BD%BF%E7%94%A8oh-my-posh/","title":"打造漂亮 Powershell 7 開發環境_使用oh-my-posh"},{"content":"軟體架構 （Software Architecture） 軟體架構（Software Architecture）是一種軟體的藍圖，它告訴你這個軟體的結構，功能，介面，用法，與其他系統的構連以及資料交換等等規範，但它並沒有叫你要用什麼方式實作\n軟體框架（Framework） 在一個既定的框架下可以做的工作，也就是說，這是一個已經成形的方法，而且有程式碼實體 （例如鋼構工法也是要有鋼材才能做），並且會告訴你要如何使用它（即 Framework Documentation，MSDN Library 即為一最佳例子）\n分析 Framework 和 Architecture 經常被用來叫做架構，其實它們兩個本質上的差異是很大的，Framework 只會告訴你怎麼用，但不會告訴你怎麼實作出特定功能，而 Architecture 是告訴你某些功能的走向以及方針，但卻沒有程式碼給你，所以 Architecture 通常會需要 Framework 來實現，而 Framework 也需要 Architecture 才能發揮其所長。\n同理可證 1. Net Core 可說是一個開發框架嗎?\n是\nWebForm 和 MVC 究竟是 框架 還是一種 架構模式 架構，因為架構能可以有不同框架來實現(EX: .net Core MVC 範本)\n架構跟框架是不是同一種東西? 不是，架構偏於規範，框架則有程式碼或是已有套件\n參考 Architecture(架構) 和 Framework(框架) 有何不同?_軟體設計前的事前規劃的藍圖概念 (coolmandiary.blogspot.com)\nFramework 和 Architecture 有何不同? | 小朱® 的技術隨手寫 - 點部落 (dotblogs.com.tw)\n","date":"2022-08-14T01:00:00+02:00","image":"https://www.beemoalex.net/p/%E6%A1%86%E6%9E%B6%E8%88%87%E6%9E%B6%E6%A7%8B%E5%B7%AE%E5%88%A5/cover_hu313dbc53bd3ede6d96e15dc413c3f15a_158609_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.beemoalex.net/p/%E6%A1%86%E6%9E%B6%E8%88%87%E6%9E%B6%E6%A7%8B%E5%B7%AE%E5%88%A5/","title":"框架與架構差別"}]